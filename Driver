import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.conf.Configured;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.hbase.HBaseConfiguration;
import org.apache.hadoop.hbase.KeyValue;
import org.apache.hadoop.hbase.client.HTable;
import org.apache.hadoop.hbase.io.ImmutableBytesWritable;
import org.apache.hadoop.hbase.io.compress.Compression;
import org.apache.hadoop.hbase.mapreduce.HFileOutputFormat;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
import org.apache.hadoop.util.Tool;
import org.apache.hadoop.util.ToolRunner;
import org.apache.hive.hcatalog.mapreduce.HCatInputFormat;

public class HbaseBulkLoadDriver extends Configured implements Tool {
	
	public int run(String[] args) throws Exception {
		String dbName = args[0];
		String inputTableName = args[1];
		String hbaseTableName = args[2];
		Job job = new Job(super.getConf(), "HBase Bulk Import customer_hierarchy_withkeys Table");
		job.setJarByClass(HbaseBulkLoadDriver.class);
		job.setMapperClass(HbaseBulkLoadMapper.class);
		job.setMapOutputKeyClass(ImmutableBytesWritable.class);
		job.setMapOutputValueClass(KeyValue.class);
		job.setInputFormatClass(HCatInputFormat.class);
		HTable hTable = new HTable(super.getConf(), hbaseTableName);
		HFileOutputFormat.configureIncrementalLoad(job, hTable);
		HCatInputFormat.setInput(job, dbName, inputTableName);
		FileOutputFormat.setOutputPath(job, new Path(args[3]));
		return (job.waitForCompletion(true) ? 0 : 1);
	}

	public static void main(String[] args) throws Exception {
		Configuration conf = new Configuration();
		HBaseConfiguration.addHbaseResources(conf);
		int exitCode = ToolRunner.run(conf,new HbaseBulkLoadDriver(), args);
		System.exit(exitCode);
	}

}
